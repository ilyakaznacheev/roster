// Code generated by go-swagger; DO NOT EDIT.

package roster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ilyakaznacheev/roster/internal/models"
)

// GetRosterRosteridBenchedOKCode is the HTTP code returned for type GetRosterRosteridBenchedOK
const GetRosterRosteridBenchedOKCode int = 200

/*GetRosterRosteridBenchedOK successful operation

swagger:response getRosterRosteridBenchedOK
*/
type GetRosterRosteridBenchedOK struct {

	/*
	  In: Body
	*/
	Payload *models.Roster `json:"body,omitempty"`
}

// NewGetRosterRosteridBenchedOK creates GetRosterRosteridBenchedOK with default headers values
func NewGetRosterRosteridBenchedOK() *GetRosterRosteridBenchedOK {

	return &GetRosterRosteridBenchedOK{}
}

// WithPayload adds the payload to the get roster rosterid benched o k response
func (o *GetRosterRosteridBenchedOK) WithPayload(payload *models.Roster) *GetRosterRosteridBenchedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roster rosterid benched o k response
func (o *GetRosterRosteridBenchedOK) SetPayload(payload *models.Roster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRosterRosteridBenchedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRosterRosteridBenchedNotFoundCode is the HTTP code returned for type GetRosterRosteridBenchedNotFound
const GetRosterRosteridBenchedNotFoundCode int = 404

/*GetRosterRosteridBenchedNotFound not found

swagger:response getRosterRosteridBenchedNotFound
*/
type GetRosterRosteridBenchedNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRosterRosteridBenchedNotFound creates GetRosterRosteridBenchedNotFound with default headers values
func NewGetRosterRosteridBenchedNotFound() *GetRosterRosteridBenchedNotFound {

	return &GetRosterRosteridBenchedNotFound{}
}

// WithPayload adds the payload to the get roster rosterid benched not found response
func (o *GetRosterRosteridBenchedNotFound) WithPayload(payload *models.Error) *GetRosterRosteridBenchedNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roster rosterid benched not found response
func (o *GetRosterRosteridBenchedNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRosterRosteridBenchedNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRosterRosteridBenchedInternalServerErrorCode is the HTTP code returned for type GetRosterRosteridBenchedInternalServerError
const GetRosterRosteridBenchedInternalServerErrorCode int = 500

/*GetRosterRosteridBenchedInternalServerError internal server error

swagger:response getRosterRosteridBenchedInternalServerError
*/
type GetRosterRosteridBenchedInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRosterRosteridBenchedInternalServerError creates GetRosterRosteridBenchedInternalServerError with default headers values
func NewGetRosterRosteridBenchedInternalServerError() *GetRosterRosteridBenchedInternalServerError {

	return &GetRosterRosteridBenchedInternalServerError{}
}

// WithPayload adds the payload to the get roster rosterid benched internal server error response
func (o *GetRosterRosteridBenchedInternalServerError) WithPayload(payload *models.Error) *GetRosterRosteridBenchedInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roster rosterid benched internal server error response
func (o *GetRosterRosteridBenchedInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRosterRosteridBenchedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
