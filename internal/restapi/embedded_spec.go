// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Roster Service API",
    "title": "Roster API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/login": {
      "post": {
        "description": "Returns a JWT token",
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster": {
      "get": {
        "description": "Returns a full list of rosters on the server",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a list of rosters",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllRosters"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}": {
      "get": {
        "description": "Returns a roster with all playes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/active": {
      "get": {
        "description": "Returns a roster with active playes only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster with active players only",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/add_player": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Adds a new player (to a benched group)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Add a new player",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          },
          {
            "description": "Player",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 403,
                "error": {
                  "text": "forbidden"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/benched": {
      "get": {
        "description": "Returns a roster with benched playes only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster with benched players only",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/rearrange": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Changes player group arrangement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Rearrange players",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          },
          {
            "description": "Player",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RearrangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 403,
                "error": {
                  "text": "forbidden"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllRosters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Roster"
      }
    },
    "AuthToken": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "error"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/ErrorMessage"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "Player": {
      "type": "object",
      "required": [
        "id",
        "first_name",
        "last_name",
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "PlayerRequest": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "RearrangeRequest": {
      "type": "object",
      "properties": {
        "to_active": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "to_benched": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "Roster": {
      "type": "object",
      "required": [
        "id",
        "players"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "players": {
          "$ref": "#/definitions/RosterPlayers"
        }
      }
    },
    "RosterPlayers": {
      "type": "object",
      "properties": {
        "active": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Player"
          }
        },
        "benched": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Player"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "A group of players related to certain roster",
      "name": "roster"
    },
    {
      "description": "Certain player in some roster",
      "name": "player"
    },
    {
      "description": "user authentication",
      "name": "auth"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Roster Service API",
    "title": "Roster API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/login": {
      "post": {
        "description": "Returns a JWT token",
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster": {
      "get": {
        "description": "Returns a full list of rosters on the server",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a list of rosters",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllRosters"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}": {
      "get": {
        "description": "Returns a roster with all playes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/active": {
      "get": {
        "description": "Returns a roster with active playes only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster with active players only",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/add_player": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Adds a new player (to a benched group)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Add a new player",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          },
          {
            "description": "Player",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 403,
                "error": {
                  "text": "forbidden"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/benched": {
      "get": {
        "description": "Returns a roster with benched playes only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "roster"
        ],
        "summary": "Get a roster with benched players only",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/roster/{rosterid}/rearrange": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Changes player group arrangement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Rearrange players",
        "parameters": [
          {
            "type": "string",
            "name": "rosterid",
            "in": "path",
            "required": true
          },
          {
            "description": "Player",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RearrangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Roster"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 403,
                "error": {
                  "text": "forbidden"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "error": {
                  "text": "not found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 500,
                "error": {
                  "text": "internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllRosters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Roster"
      }
    },
    "AuthToken": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "error"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/ErrorMessage"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "Player": {
      "type": "object",
      "required": [
        "id",
        "first_name",
        "last_name",
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "PlayerRequest": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "RearrangeRequest": {
      "type": "object",
      "properties": {
        "to_active": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "to_benched": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "Roster": {
      "type": "object",
      "required": [
        "id",
        "players"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "players": {
          "$ref": "#/definitions/RosterPlayers"
        }
      }
    },
    "RosterPlayers": {
      "type": "object",
      "properties": {
        "active": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Player"
          }
        },
        "benched": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Player"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "A group of players related to certain roster",
      "name": "roster"
    },
    {
      "description": "Certain player in some roster",
      "name": "player"
    },
    {
      "description": "user authentication",
      "name": "auth"
    }
  ]
}`))
}
